version: '3.3'

services:
  # sveltekit:
  #   container_name: sveltekit-container
  #   restart: unless-stopped
  #   build:
  #     context: ./app
  #     dockerfile: ./app/Dockerfile
  #   environment:
  #     - PORT=3000
  #   volumes:
  #     - ./static:/app/static
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - redis
  #     - db

  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass $REDIS_PASS --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - default
    ports:
      - 6379:6379
    volumes:
      - /tmp/appdata/redis/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  # nginx:
  #   image: nginx
  #   container_name: nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   restart: always
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot

  # certbot:
  #   image: certbot/certbot:latest
  #   #docker-compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d domain_name -
  #   #docker-compose run --rm certbot certonly --webroot --webroot-path /var/www/certbot/ -d domain_name
  #   volumes:
  #     - "./certbot/conf:/etc/letsencrypt"
  #     - "./certbot/www:/var/www/certbot"
  
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

    
    volumes:
      - db:/var/lib/postgresql/data

    environment:
      PGUSER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS
      
    ports:
      - 5432:5432
    # networks:
      # - ldt
  
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:7000
# networks:
  # ldt:
    # driver: bridge
volumes:
  db:
    driver: local